<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="riqR%aHDBJj~5m?(=0Ch" x="56" y="53"><statement name="HANDLER"><block type="typescript_statement" id="$Ey8:u.{O-TC)ZWn$[of"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Brainco {" line1="" line2="" line3="    export enum AttentionLevel {" line4="        /**" line5="         * Attention smaller than 25" line6="         */" line7="        //% block=&quot;low&quot;" line8="        low = 1," line9="" line10="        /**" line11="         * Attention greater than 75" line12="         */" line13="        //% block=&quot;high&quot;" line14="        high = 2" line15="    }" line16="" line17="    let high_handler: () =&gt; void = null;" line18="    let low_handler: () =&gt; void = null;" line19="    let init_flag = false;" line20="" line21="    // /**" line22="    // * Low:Attention greater than 25,High:Attention greater or equal than 75." line23="    // */" line24="    // //% block=&quot;Attention %level&quot; blockId=&quot;GetAttentionValue&quot;" line25="    // export function get_Attention_Value(level:AttentionLevel):boolean {" line26="    //     let value = 0" line27="    //     serial.setRxBufferSize(1)" line28="    //     value = serial.readBuffer(1)[0]" line29="    //     switch (level) {" line30="    //         case AttentionLevel.low:" line31="    //             return value &lt; 25" line32="    //         case AttentionLevel.high:" line33="    //             return value &gt;= 75" line34="    //         default:" line35="    //             return false" line36="    //     }" line37="    // }" line38="    //% block=&quot;on attention %level&quot; blockId=&quot;onAttentionTrigger&quot;" line39="    export function onAttentionTrigger(level: AttentionLevel, hander: () =&gt; void) {" line40="        " line41="        if (level == AttentionLevel.high) {" line42="            high_handler = hander" line43="        } else {" line44="            low_handler = hander" line45="        }" line46="" line47="        if (!init_flag) {" line48="            basic.forever(() =&gt; {" line49="                serial.setRxBufferSize(1)" line50="                let buf = serial.readBuffer(1)" line51="                if (buf != null &amp;&amp; buf.length &gt; 0) {" line52="                    if (buf[0] &lt; 25) {" line53="                        low_handler &amp;&amp; low_handler()" line54="                    } else if (buf[0] &gt; 75) {" line55="                        high_handler &amp;&amp; high_handler()" line56="                    }" line57="                }" line58="            })" line59="        }" line60="    }" line61="}" numlines="62"></mutation></block></statement></block></xml>